name: test

on:
  push:
    branches:
      - "3.0"
    paths-ignore:
      - .gitignore
      - CHANGELOG.md
      - README.md
  pull_request:
    paths-ignore:
      - .gitignore
      - CHANGELOG.md
      - README.md

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "2.7"
          - "3.0"
          - "3.1"
          - "3.2"
          - "3.3"
          - "3.4"
        env:
          - MYSQL57=1
          - MYSQL80=1
          - POSTGRESQL=1
          - TRILOGY=1
        gemfile:
          - gemfiles/activerecord_6.1.gemfile
          - gemfiles/activerecord_7.0.gemfile
          - gemfiles/activerecord_7.1.gemfile
          - gemfiles/activerecord_7.2.gemfile
          - gemfiles/activerecord_8.0.gemfile
        exclude:
          - gemfile: gemfiles/activerecord_6.1.gemfile
            env: TRILOGY=1
          - gemfile: gemfiles/activerecord_7.0.gemfile
            env: TRILOGY=1
          - ruby: "3.4"
            gemfile: gemfiles/activerecord_6.1.gemfile
          - ruby: "3.4"
            gemfile: gemfiles/activerecord_7.0.gemfile
          - ruby: "3.3"
            gemfile: gemfiles/activerecord_6.1.gemfile
          - ruby: "3.3"
            gemfile: gemfiles/activerecord_7.0.gemfile
          - ruby: "2.7"
            gemfile: gemfiles/activerecord_7.2.gemfile
          - ruby: "3.0"
            gemfile: gemfiles/activerecord_7.2.gemfile
          - ruby: "2.7"
            gemfile: gemfiles/activerecord_8.0.gemfile
          - ruby: "3.0"
            gemfile: gemfiles/activerecord_8.0.gemfile
          - ruby: "3.1"
            gemfile: gemfiles/activerecord_8.0.gemfile
    env:
      BUNDLE_GEMFILE: ${{ matrix.gemfile }}
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Setup services
        run: |
          for i in {1..60}; do docker compose up -d --quiet-pull && break; sleep 1; done
          # Wait until database servers start
          function mysql57_ping { mysqladmin -u root -h 127.0.0.1 -P 13316 ping; }
          function mysql80_ping { mysqladmin -u root -h 127.0.0.1 -P 13318 ping; }
          function pg_ping { PGPASSWORD=password pg_isready -U postgres -h 127.0.0.1 -p 15442; }
          for i in {1..60}; do mysql57_ping && break; sleep 1; done
          for i in {1..60}; do mysql80_ping && break; sleep 1; done
          for i in {1..60}; do pg_ping && break; sleep 1; done
        env:
          MYSQL_PWD: password
      - name: Run tests
        run: ${{ matrix.env }} bundle exec rake
        env:
          BUNDLE_GEMFILE: ${{ matrix.gemfile }}
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.ruby }}-${{ matrix.env }}-${{ matrix.gemfile }}
          parallel: true
      - name: Build and install gem
        run: |
          gem install securerandom -v '~> 0.3.2'
          gem install zeitwerk -v '~> 2.6.18'
          gem install activerecord -v "~> $(awk -F '[ ",]+' '/activerecord/{print $4}' ${{ matrix.gemfile }})"
          gem build ridgepole.gemspec -o ridgepole.gem
          gem install ridgepole.gem
          ridgepole -v
  finish:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
      - name: Check test conclusion
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs \
          | jq -e '.jobs | map(select(.name | test("^test ")).conclusion) | any(. == "failure") | not'
